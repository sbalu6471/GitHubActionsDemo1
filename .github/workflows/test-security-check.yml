name: CICD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  
  compile:
    runs-on: self-hosted
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn compile

  security-check:
    runs-on: self-hosted  # üîÅ switch from self-hosted temporarily
    needs: compile
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v4

    - name: Install Trivy
      run: |
        sudo apt-get update
        sudo apt-get install -y wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install -y trivy
    - name: Run Trivy on src
      run: trivy fs --format table -o fs-report.json ./src

    - name: Install Gitleaks
      run: sudo apt-get install -y gitleaks

    - name: Run Gitleaks
      run: gitleaks detect --source . --report-format json --report-path gitleaks-report.json

  test:
    runs-on: ubuntu-latest
    needs: security-check
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Unit Test Cases
      run: mvn test
      
  build_project_and_sonar_scan:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build Project
      run: mvn package

    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-jar
        path: target/*.jar 
    - uses: actions/checkout@v4
      with:
        # Disabling shallow clones is recommended for improving the relevancy of reporting
        fetch-depth: 0



  buils_docker_image_and_push:
    runs-on: ubuntu-latest
    needs: build_project_and_sonar_scan
    steps:
    - uses: actions/checkout@v4
    - name: Download JAR artifact
      uses: actions/download-artifact@v4
      with:
        name: app-jar
        path: app  # this will download JAR to ./app folder
        
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and Push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: sbalu6471/finapp:latest
        file: ./Dockerfile  